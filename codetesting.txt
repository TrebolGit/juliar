		/*var eq = str.indexOf("="); //Future?? But doesn't work in current test with picture...
			var space = str.indexOf(" ");
			var command, content,args, t,t1,t2, index1;
			if(eq != -1 && eq < space){
			command = str.substr(0,eq);
			t = str.substr(eq+1).split(",");
			t1 = t.pop(); //t now contains all but one argument, t1 contains 1 arg + content
			if((index1 = t1.indexOf(" ")) != -1){
			t.push(t1.substr(0,index1));
			args = t;
			content = t1.substr(index1+1);
			}
			else{
			content = "";
			args = t.concat(t1);
			}
			}
			else{
			command = str.substr(0,space);
			content = str.substr(space+1);
			args = [];
		}*/
		
		For juliar_pick
		
		
		//NOT FINISHED AND CONVERTED FUNCTIONS
		
		





///////////////////////////////////////////////////////////////////NOT YET CONVERTED//////////////////////////////////

/*
	function juliar_core_splitwork(str){
	if(window.Worker) {
	var temp = Math.random() * 1000000 |0;
	var w = new Worker("juliar.js");
	w.postMessage(str);
	w.onmessage = function(event) {
	document.getElementsByTagName("juliar_worker_"+temp)[0] = event.data;
	W.terminate();
	};
	return "<juliar_worker_"+temp+"></juliar_worker_"+temp+">";
	}
	return str;
	
	self.addEventListener('message', function(e) {
	self.postMessage(ijuliar_parser(e.data));
	self.close();
	}, false);
	
	}
	
	function juliar_core_figure(str,args){
	var temp = args[0] || null;
	var val = juliar_core_globals["juliar_core_counter_"+str] ?  ++juliar_core_globals["juliar_core_counter_"+str] : juliar_core_globals["juliar_core_counter_"+str] = 1;
	juliar_core_globals[temp] = val;
	return val;
	}
	
	function juliar_core_reference(str){
	return "<span class='superscript'>" + juliar_core_globals[str] + "</span>";
}*/

////////////////////////////////////////////////////////////////NOT YET FINISHED/////////////////////////////////////

/*function juliar_core_graph(str,args){
	var canvas = document.createElement('canvas');
	canvas.id     = "CursorLayer";
	canvas.width  = 500;
	canvas.height = 768;
	canvas.style.zIndex   = 8;
	canvas.style.position = "absolute";
	canvas.style.border   = "1px solid";
	document.body.appendChild(canvas);
	return "";
}*/

/*function juliar_core_setmatrix(str,args){ //NOT READY YET!
	var temp = str.split("|");
	var arr = [];
	for(var i=1, length = temp.length; i<length; i+=2){
	arr.push(temp[i].split(" ").filter(function(e){return e != "";}));
	}
	juliar_core_globals[args[0]] = arr;
	return "";
}*/

/*
	function juliar_core_getmatrix(str){ //NOT READY YET!
	var temp = juliar_core_globals[str];
	var output = "<p style='width:88px;'><span style='float:left;font-size:260px;line-height:230px;'>[</span>";
	//output += "<span style='float:right;font-size:110px;line-height:80px;'>]</span>";
	output += "<div style='padding-top:20px;font-size:20px;line-height:20px;word-spacing:20px'>";
	output += "1<br>";
	output += "1<br>";
	output += "1<br>";
	output += "1<br>";
	output += "1<br>";
	output += "1<br>";
	output += "1<br>";
	output += "1<br>";
	output += "1<br>";
	output += "1<br>";
	output += "1<br>";
	output += "</div>";
	output += "</p>";
	return output;
	}
*/

/*
	function juliar_core_loadingbar(str,args){
	var color1 = args[0] || "orange";
	var color2 = args[1] || "orange";
	var background = args[2] || "black";
	var temp = isFinite(String(str)) ? "<span style='width: "+str+"%;background-color: orange;color:black;text-align:center'>"+str+"%</span>" : 
	"<juliar_dynamic_"+str+">"+juliar_core_globals[str]+"</juliar_dynamic_"+str+">";
	return "<div class='progress-bar'>"+temp+"</div>";
	}
	
	function juliar_core_search(str){
	return "<input class='searchable' name='q' type='text' size='40' placeholder='Search...' />";
}*/

/*function juliar_core_table(str){}
	function juliar_core_slider(str){}
	function juliar_core_tab(str){}
	function juliar_core_theme(str){}
	function juliar_core_menu(str){}
	function juliar_core_slideshow(str){}
*/

/*
	
	function juliar_core_plusplus(str){
	str.split(" ").forEach(function(element) {
	juliar.getObject(element);
	});
	return "";
	}
	
	function juliar_core_minusminus(str){
	str.split(" ").forEach(function(element) {
	--juliar_core_globals[element];
	});
	return "";
}*/

/*function ijuliar_pick(str) {
	var temp = str.split(' ')[0];
	var length = temp.length;
	temp = temp.split("=");
	var command = temp[0];
	var args = temp[1] === undefined ? [] : str.slice(++command.length,length).split(",");
	var first = command[0];
	if (first == '+'){ command[1] == '+'? command = "plusplus" : command = "add" + command.slice(1);}
	else if(first == '-'){ command[1] == '-'? command = "minusminus" : command = "subtract" + command.slice(1);}
	else if(first == 'x' && command[1] === undefined) command = "multiply" + command.slice(1);
	else if(first == '/') command = "divide" + command.slice(1);
	else if(first == '^') command = "power" + command.slice(1);
	else if(parseInt(first)) command =  ["zero","one","two","three","four","five","six","seven","eight","nine","ten"][first] + command.slice(1);
	for(var i = 0, len = juliar_core_module.length; i < len;++i) {
	if (typeof window["juliar_"+juliar_core_module[i]+"_"+command] === "function") {
	return window["juliar_"+juliar_core_module[i]+"_"+command](str.substr(length).trim(),args);
	}
	}
	if (typeof window["juliar_core_"+command] === "function") {
	return window["juliar_core_"+command](str.substr(length).trim(),args);
	}
	return "Unknown command " +str;
}*/

/*function ijuliar_keydown(e) {
	var keyCode = e.keyCode;
	var target = e.target;
	if (keyCode === 13) {
	var str = target.value;
	juliar_core_history_arr.unshift(str);
	juliar_core_history_index = 0;
	var temp = document.createElement("div");
	temp.innerHTML = ijuliar_parser(str);
	target.parentNode.insertBefore(temp, target);
	target.value = "";
	var event = new Event('juliar_done');
	document.dispatchEvent(event);
	}
	else if (keyCode === 38) {
	if (juliar_core_history_arr.length !== 0) {
	if (juliar_core_history_index === juliar_core_history_arr.length) {
	juliar_core_history_index = 0;
	}
	target.value = juliar_core_history_arr[juliar_core_history_index];
	juliar_core_history_index += 1;
	}
	}
	else if (keyCode === 40) {
	if (juliar_core_history_arr.length !== 0) {
	if (juliar_core_history_index === -1) {
	juliar_core_history_index = juliar_core_history_arr.length - 1;
	}
	target.value = juliar_core_history_arr[juliar_core_history_index];
	juliar_core_history_index -= 1;
	}
	}
	}
	
	function ijuliar_interpreter() {
	var ijuliars = document.getElementsByTagName("ijuliar");
	for (var i = 0, juliar = ijuliars.length; i < juliar; i++) {
	var jselector = ijuliars[i];
	jselector.innerHTML = "<br><input type='text' style='width: 600px;border-top: 0;border-right: 0;border-left: 0;background: transparent;border-color:rgba(0,0,0,0.3);'>";
	jselector.addEventListener("keydown", ijuliar_keydown);
	}
}*/                                 
